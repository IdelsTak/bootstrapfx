/*
 * SPDX-License-Identifier: MIT
 *
 * Copyright (c) 2015-2021 Andres Almiray.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

plugins {
    id 'com.google.osdetector'
}

project.rootProject.ext.theVersion = file('VERSION').text.trim()

allprojects { p ->
    p.version = p.rootProject.ext.theVersion
}

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

config {
    info {
        description   = 'BootstrapFX: CSS and widgets'
        inceptionYear = '2015'
        tags          = ['javafx','css','bootstrap']

        specification { enabled = false }
    }

    licensing {
        licenses {
            inherits = false
            license {
                id      = 'MIT'
                primary = true
            }
        }
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
            options {
                addBooleanOption('javafx', true)
            }
            aggregate {
                enabled = false
            }
        }
    }
}

allprojects {
    apply plugin: 'idea'
}

idea {
    project {
        jdkName sourceCompatibility
        languageLevel sourceCompatibility

        ipr {
            withXml { provider ->
                def node = provider.asNode()
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
            }
        }
    }
}

allprojects {
    license {
        exclude '**/*.fxml'
        exclude '**/*.scss'
    }
}